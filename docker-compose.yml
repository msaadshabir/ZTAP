version: "3.8"

services:
  ztap:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ztap
    hostname: ztap
    privileged: true # Required for eBPF on Linux
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
      - BPF
    volumes:
      - ./examples:/etc/ztap/examples:ro
      - ./config:/etc/ztap/config:ro
      - ztap-data:/var/lib/ztap
      - ztap-logs:/var/log/ztap
      - /sys/fs/cgroup:/sys/fs/cgroup:ro # For eBPF cgroup attachment
    ports:
      - "9090:9090" # Metrics endpoint
    networks:
      - ztap-net
    command: ["metrics", "--port", "9090"]
    restart: unless-stopped
    depends_on:
      - prometheus

  prometheus:
    image: prom/prometheus:v2.48.0
    container_name: ztap-prometheus
    hostname: prometheus
    volumes:
      - ./deployments/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    ports:
      - "9091:9090" # Expose on different port to avoid conflict
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
      - "--storage.tsdb.retention.time=30d"
    networks:
      - ztap-net
    restart: unless-stopped

  grafana:
    image: grafana/grafana:10.2.2
    container_name: ztap-grafana
    hostname: grafana
    volumes:
      - ./deployments/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./deployments/grafana/datasources:/etc/grafana/provisioning/datasources:ro
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=ztap
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=http://localhost:3000
    ports:
      - "3000:3000"
    networks:
      - ztap-net
    restart: unless-stopped
    depends_on:
      - prometheus

  # Anomaly detection microservice
  anomaly-detector:
    build:
      context: ./pkg/anomaly
      dockerfile: Dockerfile
    container_name: ztap-anomaly
    hostname: anomaly-detector
    volumes:
      - anomaly-data:/app/data
      - anomaly-models:/app/models
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - MODEL_PATH=/app/models
    networks:
      - ztap-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  ztap-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  ztap-data:
    driver: local
  ztap-logs:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  anomaly-data:
    driver: local
  anomaly-models:
    driver: local
